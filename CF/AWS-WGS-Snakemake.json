{
    "Parameters": {
        "Tag": {
            "Type": "String",
            "Default": "snakemake-vpc",
            "Description": "Name of the VPC"
        },
        "VPCCIDR": {
            "Type": "String",
            "Default": "10.0.0.0/16",
            "Description": "CIDR Block for the VPC - This should not overlap with any existing CIDR Blocks"
        },
        "SubnetACIDR": {
            "Type": "String",
            "Default": "10.0.0.0/24",
            "Description": "CIDR Block for Subnet A"
        },
        "SubnetBCIDR": {
            "Type": "String",
            "Default": "10.0.1.0/24",
            "Description": "CIDR Block for Subnet B"
        },
        "LatestAmiId": {
            "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
            "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
        },
        "SSHLocation": {
            "Description": "The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        }
    },
    "Resources": {
        "VPC": {
            "Metadata": {
                "VPC": {
                    "Description": "This VPC is provisioned for the ECS tasks to use"
                }
            },
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "Tag"
                        }
                    }
                ]
            }
        },
        "SubnetA": {
            "Metadata": {
                "Subnets": {
                    "Description": "Currently two subnets are provisoned for ECS tasks"
                }
            },
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.0.0/24",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "snakemake-subnet-a"
                    }
                ]
            }
        },
        "SubnetB": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.1.0/24",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "snakemake-subnet-b"
                    }
                ]
            }
        },
        "RouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "snakemake-rt"
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway"
        },
        "VPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "InternetRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "RouteTable"
                }
            }
        },
        "SubnetARouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteTable"
                },
                "SubnetId": {
                    "Ref": "SubnetA"
                }
            }
        },
        "SubnetBRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteTable"
                },
                "SubnetId": {
                    "Ref": "SubnetB"
                }
            }
        },
        "VPCSecurityGroup": {
            "Metadata": {
                "SecurityGroup": {
                    "Description": "This security group allows all incoming traffic"
                }
            },
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow all traffic",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": -1,
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "WGSECSCluster": {
            "Metadata": {
                "ECSCluster": {
                    "Description": "This ECS Cluster will rely on Fargate to provision infrastructure"
                }
            },
            "Type": "AWS::ECS::Cluster",
            "Properties": {
                "CapacityProviders": [
                    "FARGATE",
                    "FARGATE_SPOT"
                ],
                "ClusterName": {
                    "Fn::Join": [
                        "-",
                        [
                            "wgs-pipeline-cluster",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                },
                "ClusterSettings": [
                    {
                        "Name": "containerInsights",
                        "Value": "enabled"
                    }
                ],
                "Configuration": {
                    "ExecuteCommandConfiguration": {
                        "Logging": "DEFAULT"
                    }
                },
                "ServiceConnectDefaults": {
                    "Namespace": "wgs-pipeline-cluster"
                },
                "Tags": [
                    {
                        "Key": "ecs:cluster:createdFrom",
                        "Value": "ecs-console-v2"
                    }
                ]
            }
        },
        "WGSBucket": {
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
                "BucketName": {
                    "Fn::Join": [
                        "-",
                        [
                            "wgs-pipeline-bucket",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                }
            }
        },
        "WGSLambdaStatesRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Description": "This role is assumed by a Lambda function allows for tasks execution ",
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            "wgs-pipeline-lambda-role",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                }
            }
        },
        "LambdaStatesPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Fn::Join": [
                        "-",
                        [
                            "LambdaStatesPolicy",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:logs:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:logs:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":log-group:/aws/lambda/WGSStateExecutor:*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ecs:RunTask"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "iam:PassRole"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "WGSLambdaStatesRole"
                    }
                ]
            }
        },
        "WGSPipelineRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Description": "This role is assumed by an ECS task allows for tasks execution, a S3 bucket, and other resources accessed by the tibanna services  like cloudwatch, dynamodb, lambda and ECS ",
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            "wgs-pipeline-role",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ecs-tasks.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                }
            }
        },
        "TibannaCW": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Fn::Join": [
                        "-",
                        [
                            "WGSTibannaCW",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": "arn:aws:logs:*:*:*"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "WGSPipelineRole"
                    }
                ]
            }
        },
        "TibannaLambda": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Fn::Join": [
                        "-",
                        [
                            "WGSTibannaLambda",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents",
                                "states:ListExecutions"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:lambda:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":function:",
                                            {
                                                "Fn::Join": [
                                                    "-",
                                                    [
                                                        "run_task_awsem_wgs-pipeline",
                                                        {
                                                            "Fn::Select": [
                                                                0,
                                                                {
                                                                    "Fn::Split": [
                                                                        "-",
                                                                        {
                                                                            "Fn::Select": [
                                                                                2,
                                                                                {
                                                                                    "Fn::Split": [
                                                                                        "/",
                                                                                        {
                                                                                            "Ref": "AWS::StackId"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:lambda:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":function:",
                                            {
                                                "Fn::Join": [
                                                    "-",
                                                    [
                                                        "check_task_awsem_wgs-pipeline",
                                                        {
                                                            "Fn::Select": [
                                                                0,
                                                                {
                                                                    "Fn::Split": [
                                                                        "-",
                                                                        {
                                                                            "Fn::Select": [
                                                                                2,
                                                                                {
                                                                                    "Fn::Split": [
                                                                                        "/",
                                                                                        {
                                                                                            "Ref": "AWS::StackId"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:lambda:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":function:update_cost_awsem_tibanna_wgs-pipeline"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "WGSPipelineRole"
                    }
                ]
            }
        },
        "TibannaDynamoDB": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Fn::Join": [
                        "-",
                        [
                            "WGSTibannaDynamoDB",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "dynamodb:DescribeTable",
                                "dynamodb:PutItem",
                                "dynamodb:Query",
                                "dynamodb:UpdateItem"
                            ],
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:dynamodb:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":table/tibanna-master"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "WGSPipelineRole"
                    }
                ]
            }
        },
        "TibannaECRTasks": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Fn::Join": [
                        "-",
                        [
                            "WGSTibannaECRTasks",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ecr:GetAuthorizationToken",
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage",
                                "logs:CreateLogStream",
                                "states:DescribeStateMachineForExecution"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "WGSPipelineRole"
                    }
                ]
            }
        },
        "TibannaStateExecutions": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Fn::Join": [
                        "-",
                        [
                            "WGSTibannaStateExecutions",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "states:StartExecution",
                                "states:StopExecution",
                                "states:ListExecutions",
                                "states:DescribeExecution",
                                "states:GetExecutionHistory",
                                "states:DescribeStateMachineForExecution",
                                "states:DescribeStateMachine"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:states:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":stateMachine:",
                                            {
                                                "Fn::Join": [
                                                    "-",
                                                    [
                                                        "tibanna_unicorn_wgs-pipeline",
                                                        {
                                                            "Fn::Select": [
                                                                0,
                                                                {
                                                                    "Fn::Split": [
                                                                        "-",
                                                                        {
                                                                            "Fn::Select": [
                                                                                2,
                                                                                {
                                                                                    "Fn::Split": [
                                                                                        "/",
                                                                                        {
                                                                                            "Ref": "AWS::StackId"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:states:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":stateMachine:tibanna_unicorn_wgs-pipeline_costupdater"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:states:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":execution:",
                                            {
                                                "Fn::Join": [
                                                    "-",
                                                    [
                                                        "tibanna_unicorn_wgs-pipeline",
                                                        {
                                                            "Fn::Select": [
                                                                0,
                                                                {
                                                                    "Fn::Split": [
                                                                        "-",
                                                                        {
                                                                            "Fn::Select": [
                                                                                2,
                                                                                {
                                                                                    "Fn::Split": [
                                                                                        "/",
                                                                                        {
                                                                                            "Ref": "AWS::StackId"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:states:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":execution:tibanna_unicorn_wgs-pipeline_costupdater:*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Sid": "VisualEditor1",
                            "Effect": "Allow",
                            "Action": [
                                "states:ListStateMachines",
                                "states:ListExecutions"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "WGSPipelineRole"
                    }
                ]
            }
        },
        "TibannaS3": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Fn::Join": [
                        "-",
                        [
                            "WGSTibannaS3",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "*"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "WGSBucket"
                                            },
                                            "/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "WGSBucket"
                                            }
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "WGSPipelineRole"
                    }
                ]
            }
        },
        "CodeBuildProjectCreate": {
            "Type": "AWS::CodeBuild::Project",
            "Properties": {
                "Artifacts": {
                    "Type": "NO_ARTIFACTS"
                },
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            "wgs-create-pipeline-codebuild",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                },
                "Description": "Codebuild project to deploy tibanna",
                "Environment": {
                    "ComputeType": "BUILD_GENERAL1_SMALL",
                    "EnvironmentVariables": [
                        {
                            "Name": "AWS_DEFAULT_REGION",
                            "Value": {
                                "Ref": "AWS::Region"
                            }
                        },
                        {
                            "Name": "AWS_ACCOUNT_ID",
                            "Value": {
                                "Ref": "AWS::AccountId"
                            }
                        },
                        {
                            "Name": "AWS_ECR_REPOSITORY_URI",
                            "Value": "public.ecr.aws/v0f9o4u7/hesct:latest"
                        },
                        {
                            "Name": "IMAGE_TAG",
                            "Value": "latest"
                        },
                        {
                            "Name": "WGS_BUCKET",
                            "Value": {
                                "Ref": "WGSBucket"
                            }
                        },
                        {
                            "Name": "TIBANNA_EXECUTION_POLICY",
                            "Value": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:iam::",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":policy/tibanna_wgs-pipeline-",
                                        {
                                            "Fn::Select": [
                                                0,
                                                {
                                                    "Fn::Split": [
                                                        "-",
                                                        {
                                                            "Fn::Select": [
                                                                2,
                                                                {
                                                                    "Fn::Split": [
                                                                        "/",
                                                                        {
                                                                            "Ref": "AWS::StackId"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "_executions"
                                    ]
                                ]
                            }
                        },
                        {
                            "Name": "TIBANNA_CHECK_TASK_ROLENAME",
                            "Value": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "tibanna_wgs-pipeline-",
                                        {
                                            "Fn::Select": [
                                                0,
                                                {
                                                    "Fn::Split": [
                                                        "-",
                                                        {
                                                            "Fn::Select": [
                                                                2,
                                                                {
                                                                    "Fn::Split": [
                                                                        "/",
                                                                        {
                                                                            "Ref": "AWS::StackId"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "_check_task_awsem"
                                    ]
                                ]
                            }
                        },
                        {
                            "Name": "TIBANNA_USERGROUP",
                            "Value": {
                                "Fn::Join": [
                                    "-",
                                    [
                                        "wgs-pipeline",
                                        {
                                            "Fn::Select": [
                                                0,
                                                {
                                                    "Fn::Split": [
                                                        "-",
                                                        {
                                                            "Fn::Select": [
                                                                2,
                                                                {
                                                                    "Fn::Split": [
                                                                        "/",
                                                                        {
                                                                            "Ref": "AWS::StackId"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "Image": "aws/codebuild/standard:5.0",
                    "PrivilegedMode": true,
                    "Type": "LINUX_CONTAINER"
                },
                "ServiceRole": {
                    "Fn::GetAtt": [
                        "CodeBuildRole",
                        "Arn"
                    ]
                },
                "Source": {
                    "Type": "NO_SOURCE",
                    "BuildSpec": {
                        "Fn::Sub": "version: 0.2\nphases:\n  pre_build:\n    commands:\n     - echo Logging in to Amazon ECR...\n \n  build:\n    commands:\n      - echo Build started on `date`\n      - virtualenv -p python3.8 ~/venv/tibanna\n      - . ~/venv/tibanna/bin/activate\n      - pip3 install tibanna\n      - tibanna deploy_unicorn --usergroup=$TIBANNA_USERGROUP --buckets=$WGS_BUCKET\n  post_build:\n    commands:\n      - echo Build completed on `date`\n      - echo changig role...\n      - aws iam attach-role-policy --policy-arn $TIBANNA_EXECUTION_POLICY --role-name $TIBANNA_CHECK_TASK_ROLENAME\n"
                    }
                }
            }
        },
        "CodeBuildProjectRemove": {
            "Type": "AWS::CodeBuild::Project",
            "Properties": {
                "Artifacts": {
                    "Type": "NO_ARTIFACTS"
                },
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            "wgs-remove-pipeline-codebuild",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                },
                "Description": "Codebuild project to  purge tibanna",
                "Environment": {
                    "ComputeType": "BUILD_GENERAL1_SMALL",
                    "EnvironmentVariables": [
                        {
                            "Name": "AWS_DEFAULT_REGION",
                            "Value": {
                                "Ref": "AWS::Region"
                            }
                        },
                        {
                            "Name": "AWS_ACCOUNT_ID",
                            "Value": {
                                "Ref": "AWS::AccountId"
                            }
                        },
                        {
                            "Name": "AWS_ECR_REPOSITORY_URI",
                            "Value": "public.ecr.aws/v0f9o4u7/hesct:latest"
                        },
                        {
                            "Name": "IMAGE_TAG",
                            "Value": "latest"
                        },
                        {
                            "Name": "TIBANNA_USERGROUP",
                            "Value": {
                                "Fn::Join": [
                                    "-",
                                    [
                                        "wgs-pipeline",
                                        {
                                            "Fn::Select": [
                                                0,
                                                {
                                                    "Fn::Split": [
                                                        "-",
                                                        {
                                                            "Fn::Select": [
                                                                2,
                                                                {
                                                                    "Fn::Split": [
                                                                        "/",
                                                                        {
                                                                            "Ref": "AWS::StackId"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "Image": "aws/codebuild/standard:5.0",
                    "PrivilegedMode": true,
                    "Type": "LINUX_CONTAINER"
                },
                "ServiceRole": {
                    "Fn::GetAtt": [
                        "CodeBuildRole",
                        "Arn"
                    ]
                },
                "Source": {
                    "Type": "NO_SOURCE",
                    "BuildSpec": {
                        "Fn::Sub": "version: 0.2\nphases:\n  pre_build:\n    commands:\n      - echo Logging in to Amazon ECR...\n  build:\n    commands:\n      - echo Remove started on `date`\n      - echo install Tibanna...\n      - virtualenv -p python3.8 ~/venv/tibanna\n      - . ~/venv/tibanna/bin/activate\n      - pip3 install tibanna\n  post_build:\n    commands:\n      - echo Build completed on `date`\n      - echo Removing Tibanna and the snakemake image..\n      - tibanna cleanup -g $TIBANNA_USERGROUP -p\n"
                    }
                }
            }
        },
        "CodeBuildRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "codebuild.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    "WGSPushImageToEcr",
                                    {
                                        "Fn::Select": [
                                            0,
                                            {
                                                "Fn::Split": [
                                                    "-",
                                                    {
                                                        "Fn::Select": [
                                                            2,
                                                            {
                                                                "Fn::Split": [
                                                                    "/",
                                                                    {
                                                                        "Ref": "AWS::StackId"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "*",
                                    "Resource": "*"
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    "CodeBuildLogsRole",
                                    {
                                        "Fn::Select": [
                                            0,
                                            {
                                                "Fn::Split": [
                                                    "-",
                                                    {
                                                        "Fn::Select": [
                                                            2,
                                                            {
                                                                "Fn::Split": [
                                                                    "/",
                                                                    {
                                                                        "Ref": "AWS::StackId"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    "GetAndPutArtifacts",
                                    {
                                        "Fn::Select": [
                                            0,
                                            {
                                                "Fn::Split": [
                                                    "-",
                                                    {
                                                        "Fn::Select": [
                                                            2,
                                                            {
                                                                "Fn::Split": [
                                                                    "/",
                                                                    {
                                                                        "Ref": "AWS::StackId"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:PutObject",
                                        "s3:ListBucket"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "WGSBucket",
                                                "Arn"
                                            ]
                                        },
                                        {
                                            "Fn::Sub": "${WGSBucket.Arn}/*"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "WGSTask": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "ContainerDefinitions": [
                    {
                        "Name": "aws-otel-collector",
                        "Image": {
                            "Fn::Join": [
                                "",
                                [
                                    "public.ecr.aws/aws-observability/aws-otel-collector:v0.21.1"
                                ]
                            ]
                        },
                        "Essential": true,
                        "Command": [
                            "--config=/etc/ecs/ecs-cloudwatch.yaml"
                        ],
                        "LogConfiguration": {
                            "LogDriver": "awslogs",
                            "Options": {
                                "awslogs-create-group": true,
                                "awslogs-group": "/ecs/ecs-aws-otel-sidecar-collector",
                                "awslogs-region": {
                                    "Ref": "AWS::Region"
                                },
                                "awslogs-stream-prefix": "ecs"
                            }
                        }
                    },
                    {
                        "Name": "snakemake",
                        "Image": "public.ecr.aws/v0f9o4u7/hesct:latest",
                        "Essential": true,
                        "LogConfiguration": {
                            "LogDriver": "awslogs",
                            "Options": {
                                "awslogs-create-group": true,
                                "awslogs-group": "/ecs/wgs-pipeline-snakemake",
                                "awslogs-region": {
                                    "Ref": "AWS::Region"
                                },
                                "awslogs-stream-prefix": "ecs"
                            }
                        },
                        "EntryPoint": [
                            "/bin/bash",
                            "-c"
                        ],
                        "Command": [
                            "cd /home ; curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"./awscliv2.zip\" ; unzip ./awscliv2.zip ; ./aws/install ; /usr/local/bin/aws s3 sync s3://scotth-bio-pipeline/data/snakefiles ./  ; pip install -U tibanna; export TIBANNA_DEFAULT_STEP_FUNCTION_NAME=tibanna_unicorn_wgs_pipeline ; ls -al ./ ; snakemake -R samtools_sort --tibanna --precommand=\"ln -s /data1/snakemake/scotth-bio-pipeline/data /data \"  --tibanna-config spot_instance=false behavior_on_capacity_limit=wait_and_retry --default-remote-prefix=scotth-bio-pipeline  --jobs=2 --use-conda"
                        ]
                    }
                ],
                "Cpu": 2048,
                "EphemeralStorage": {
                    "SizeInGiB": 21
                },
                "ExecutionRoleArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:iam::",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":role/",
                            {
                                "Ref": "WGSPipelineRole"
                            }
                        ]
                    ]
                },
                "Family": {
                    "Fn::Join": [
                        "-",
                        [
                            "wgs-pipeline-task",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                },
                "Memory": 9216,
                "NetworkMode": "awsvpc",
                "RuntimePlatform": {
                    "CpuArchitecture": "X86_64",
                    "OperatingSystemFamily": "LINUX"
                },
                "TaskRoleArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:iam::",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":role/",
                            {
                                "Ref": "WGSPipelineRole"
                            }
                        ]
                    ]
                }
            }
        },
        "WGSLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": "starts a state machine",
                "FunctionName": {
                    "Fn::Join": [
                        "-",
                        [
                            "WGSStateExecutor",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                },
                "Handler": "index.lambda_handler",
                "MemorySize": 128,
                "Runtime": "python3.9",
                "Role": {
                    "Fn::GetAtt": [
                        "WGSLambdaStatesRole",
                        "Arn"
                    ]
                },
                "Timeout": 240,
                "Environment": {
                    "Variables": {
                        "CLUSTER": {
                            "Ref": "WGSECSCluster"
                        },
                        "CMD": {
                            "Fn::Sub": [
                                "cd ~/ ; curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"./awscliv2.zip\" ; unzip ./awscliv2.zip ; ./aws/install ; /usr/local/bin/aws s3 sync s3://${WGS_BUCKET}/data/snakefiles ./; pwd; pip install -U tibanna; export TIBANNA_DEFAULT_STEP_FUNCTION_NAME=${TIBANNA_STEP_FUNCTION} ; snakemake -R samtools_sort --tibanna --precommand=\"ln -s /data1/snakemake/${WGS_BUCKET}/data /data \"  --tibanna-config spot_instance=false behavior_on_capacity_limit=wait_and_retry --default-remote-prefix=${WGS_BUCKET} --jobs=2 --use-conda;",
                                {
                                    "WGS_BUCKET": {
                                        "Ref": "WGSBucket"
                                    },
                                    "TIBANNA_STEP_FUNCTION": {
                                        "Fn::Join": [
                                            "-",
                                            [
                                                "tibanna_unicorn_wgs-pipeline",
                                                {
                                                    "Fn::Select": [
                                                        0,
                                                        {
                                                            "Fn::Split": [
                                                                "-",
                                                                {
                                                                    "Fn::Select": [
                                                                        2,
                                                                        {
                                                                            "Fn::Split": [
                                                                                "/",
                                                                                {
                                                                                    "Ref": "AWS::StackId"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        ]
                                    }
                                }
                            ]
                        },
                        "SECURITY_GROUP": {
                            "Ref": "VPCSecurityGroup"
                        },
                        "SUBNET_A": {
                            "Ref": "SubnetA"
                        },
                        "SUBNET_B": {
                            "Ref": "SubnetB"
                        },
                        "TASK": {
                            "Fn::Join": [
                                "",
                                [
                                    "wgs-pipeline-task-",
                                    {
                                        "Fn::Select": [
                                            0,
                                            {
                                                "Fn::Split": [
                                                    "-",
                                                    {
                                                        "Fn::Select": [
                                                            2,
                                                            {
                                                                "Fn::Split": [
                                                                    "/",
                                                                    {
                                                                        "Ref": "AWS::StackId"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    ":1"
                                ]
                            ]
                        }
                    }
                },
                "Code": {
                    "ZipFile": "# Imports\nimport boto3\nimport os\nimport logging\n# Set up clients and resources\nclient = boto3.client(\"ecs\")\n# Set up the logger\n#logger = logging.getLogger()\n#logger.setLevel(logging.INFO)\n#logger.setLevel(logging.DEBUG) # Very verbose\n\ndef lambda_handler(event, context):\n  print(event)\n\n  try:\n    client = boto3.client(\"ecs\")\n    CLUSTER = os.environ['CLUSTER']\n    SECURITY_GROUP = os.environ['SECURITY_GROUP']\n    SUBNET_A = os.environ['SUBNET_A']\n    SUBNET_B = os.environ['SUBNET_B']\n    CMD = os.environ['CMD']\n    TASK = os.environ['TASK']\n    response = client.run_task(\n        cluster=CLUSTER,  # name of the cluster\n        launchType=\"FARGATE\",\n        taskDefinition=TASK,  # replace with your task definition name and revision\n        count=1,\n        platformVersion=\"LATEST\",\n        overrides={\n            \"containerOverrides\": [\n                {\n                    \"name\": \"snakemake\",\n                    \"command\": [\n                        CMD                  ],\n                }\n            ]\n        },\n         networkConfiguration={\n            \"awsvpcConfiguration\": {\n                \"subnets\": [SUBNET_A,SUBNET_B],\n                \"securityGroups\": [\n                    SECURITY_GROUP,\n                ],\n                \"assignPublicIp\": \"ENABLED\",\n            }\n        },\n    )\n    return str(response)\n  except Exception as e:\n        print(e)\n\n        return {\n            'statusCode': 500,\n            'body': str(e)\n        }  \n"
                }
            }
        },
        "EC2InstanceRole": {
            "Type": "AWS::IAM::Role",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Description": "This role is assumed by the instance ",
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            "EDUResearchWGSEC2Role-",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "root",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "codebuild:StartBuild"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:codebuild:*:*:project/",
                                                    {
                                                        "Ref": "CodeBuildProjectCreate"
                                                    }
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Action": [
                                        "ec2:TerminateInstances"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "s3:ListBucket",
                                        "s3:ListObjects",
                                        "s3:PutObject"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                }
                            ]
                        }
                    }
                ],
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
                ]
            }
        },
        "EC2InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "DeletionPolicy": "Retain",
            "Properties": {
                "InstanceProfileName": {
                    "Fn::Join": [
                        "-",
                        [
                            "edu-research-ec2-instance-profile-",
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    ]
                },
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "EC2InstanceRole"
                    }
                ]
            }
        },
        "InstanceSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable SSH access via port 22",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        }
                    }
                ]
            }
        },
        "InitInstance": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": [
                "EC2InstanceRole",
                "EC2InstanceProfile",
                "InstanceSecurityGroup"
            ],
            "Properties": {
                "InstanceType": "t2.micro",
                "ImageId": {
                    "Ref": "LatestAmiId"
                },
                "SecurityGroups": [
                    {
                        "Ref": "InstanceSecurityGroup"
                    }
                ],
                "InstanceInitiatedShutdownBehavior": "terminate",
                "IamInstanceProfile": {
                    "Ref": "EC2InstanceProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WGS-Snakemake-Init"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Sub": "#cloud-config\nrepo_update: true\nrepo_upgrade: all\n\npackages:\n- git\n\nruncmd:\n- export HOME=/root\n- echo \"Start of Script\"\n- aws codebuild start-build --region ${AWS::Region} --project-name ${CodeBuildProjectCreate}\n- git clone https://github.com/scottwhendrickson/erd-data.git\n- cd erd-data\n- aws s3 sync data s3://${WGSBucket}\n- echo \"End of Script\"\n- aws ec2 terminate-instances --region ${AWS::Region} --instance-ids $(curl http://169.254.169.254/latest/meta-data/instance-id/)\n"
                    }
                }
            }
        }
    },
    "Outputs": {
        "WGSExecutor": {
            "Description": "Your lambda function to execute pipeline",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Ref": "AWS::Region"
                        },
                        ".console.aws.amazon.com/lambda/home?",
                        {
                            "Ref": "AWS::Region"
                        },
                        "#/functions/",
                        {
                            "Ref": "WGSLambdaFunction"
                        }
                    ]
                ]
            }
        },
        "WGSECSCluster": {
            "Description": "The wgs-pipeline-east ECS cluster.",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Ref": "AWS::Region"
                        },
                        ".console.aws.amazon.com/ecs/v2/clusters/",
                        {
                            "Ref": "WGSECSCluster"
                        }
                    ]
                ]
            }
        },
        "WGSStackId": {
            "Description": "Your stack identifier for resources",
            "Value": {
                "Fn::Join": [
                    "-",
                    [
                        "",
                        {
                            "Fn::Select": [
                                0,
                                {
                                    "Fn::Split": [
                                        "-",
                                        {
                                            "Fn::Select": [
                                                2,
                                                {
                                                    "Fn::Split": [
                                                        "/",
                                                        {
                                                            "Ref": "AWS::StackId"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                ]
            }
        },
        "WGSBucket": {
            "Description": "Your bucket for data and snakefiles.",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://s3.console.aws.amazon.com/s3/buckets/",
                        {
                            "Ref": "WGSBucket"
                        }
                    ]
                ]
            }
        }
    }
}